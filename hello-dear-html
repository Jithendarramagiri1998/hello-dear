<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Cinematic Done the project</title>
  <style>
    :root{
      --accent: 255, 200, 80;   /* golden */
      --accent2: 120, 180, 255; /* blue */
      --bg1: 14,18,28;          /* deep navy */
      --bg2: 6,8,12;            /* almost black */
      --grain-opacity: .06;
    }

    /* Reset */
    *{box-sizing:border-box;margin:0;padding:0}
    html,body{height:100%;}
    body{
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, "Helvetica Neue", Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
      background: radial-gradient(1200px 800px at 70% 30%, rgba(var(--accent2),.15), rgba(0,0,0,0)) ,
                  radial-gradient(900px 700px at 20% 70%, rgba(var(--accent),.12), rgba(0,0,0,0)) ,
                  linear-gradient(160deg, rgb(var(--bg1)) 0%, rgb(var(--bg2)) 60%);
      overflow:hidden;
      color:white;
      letter-spacing: .04em;
    }

    /* Cinematic letterbox bars */
    .bar{position:fixed;left:0;right:0;height:8vh;background:linear-gradient(to bottom, rgba(0,0,0,.8), rgba(0,0,0,.4));z-index:20;transform:translateY(-100%);animation:barsIn 1.1s ease-out forwards .4s;filter:saturate(.7) contrast(1.2)}
    .bar.bottom{top:auto;bottom:0;transform:translateY(100%);background:linear-gradient(to top, rgba(0,0,0,.85), rgba(0,0,0,.4));}
    @keyframes barsIn{to{transform:translateY(0)}}

    /* Subtle vignette */
    .vignette{position:fixed;inset:0;pointer-events:none;box-shadow:inset 0 0 250px 80px rgba(0,0,0,.7);z-index:5}

    /* Floating particles canvas */
    #fx{position:fixed;inset:0;z-index:2;filter: blur(0.2px) saturate(1.2)}

    /* Center stage */
    .stage{position:relative;inset:0;height:100vh;display:grid;place-items:center;perspective:1200px;}

    /* Camera slow push-in */
    .camera{position:relative;transform:translateZ(0) scale(1);animation:pushIn 11s ease-in forwards .9s;}
    @keyframes pushIn{to{transform:translateZ(0) scale(1.08)}}

    /* Title */
    .title{
      font-size: clamp(40px, 10vw, 160px);
      font-weight: 800;
      line-height: .85;
      text-align:center;
      letter-spacing:.08em;
      text-transform:uppercase;
      background: linear-gradient( 180deg, rgba(255,255,255, .95), rgba(255,255,255,.75) 60%, rgba(255,255,255,.6) ),
                  radial-gradient(60% 160% at 50% 20%, rgba(var(--accent), .9), rgba(var(--accent2), .7));
      -webkit-background-clip: text; background-clip:text; color: transparent;
      filter: drop-shadow(0 6px 24px rgba(255,255,255,.2));
      position:relative;opacity:0; transform:translateY(18px) scale(.98);
      animation:titleIn .9s cubic-bezier(.2,.65,.2,1) forwards 1.1s;
    }
    @keyframes titleIn{ to{ opacity:1; transform:translateY(0) scale(1);} }

    /* Glow sweep */
    .title::after{
      content:""; position:absolute; inset:0; background: linear-gradient(110deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.6) 50%, rgba(255,255,255,0) 100%);
      mix-blend-mode:screen; transform: translateX(-120%) skewX(-20deg); filter: blur(8px);
      animation:shine 2.4s ease-out 1.6s forwards;
    }
    @keyframes shine{ to{ transform: translateX(120%) skewX(-20deg);} }

    /* Subtitle */
    .subtitle{
      margin-top: clamp(8px, 2.5vh, 20px);
      text-align:center; font-size: clamp(14px, 2.2vw, 22px); opacity:0; transform: translateY(8px);
      color: rgba(255,255,255,.85);
      text-shadow: 0 0 20px rgba(var(--accent2), .15);
      animation: subIn .8s ease-out forwards 1.4s;
    }
    @keyframes subIn{ to{ opacity:1; transform:translateY(0);} }

    /* Floating lens flare dots */
    .flare{ position: absolute; width: 14vmax; height:14vmax; border-radius:50%;
      background: radial-gradient(circle, rgba(var(--accent),.35) 0, rgba(var(--accent),0) 70%);
      filter: blur(18px) saturate(1.4);
      mix-blend-mode:screen; opacity:.0; animation: flare 10s ease-in-out infinite alternate 1.2s; z-index:1}
    .flare.b{ background: radial-gradient(circle, rgba(var(--accent2),.35) 0, rgba(var(--accent2),0) 70%); animation-delay: 1.8s}
    @keyframes flare{ 0%{ transform: translate(-20vw, -10vh) scale(.8); opacity:.15} 100%{ transform: translate(30vw, 15vh) scale(1.15); opacity:.35} }

    /* Grain overlay */
    .grain{ position:fixed; inset:0; pointer-events:none; z-index:9; opacity: var(--grain-opacity);
      background-image: url('data:image/svg+xml;utf8,\
        <svg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160">\
          <filter id="n">\
            <feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="2" stitchTiles="stitch"/>\
            <feColorMatrix type="saturate" values="0"/>\
          </filter>\
          <rect width="100%" height="100%" filter="url(%23n)"/>\
        </svg>');
      background-size: 240px 240px; mix-blend-mode: soft-light; animation: grainMove 3s steps(6) infinite;}
    @keyframes grainMove{ to{ transform: translate3d(0,0,0)} }

    /* CTA hint */
    .hint{ position:fixed; bottom: 12px; left:50%; transform:translateX(-50%); font-size:12px; color:rgba(255,255,255,.6); letter-spacing:.15em; text-transform:uppercase; z-index:25; opacity:0; animation: hintIn .8s ease-out forwards 2.2s}
    @keyframes hintIn{ to{opacity:1}}
    .hint svg{width:18px; vertical-align:middle}

    /* Responsive safety */
    @media (max-width: 420px){ .subtitle{ max-width: 90vw; } }
  </style>
</head>
<body>
  <!-- Cinematic bars -->
  <div class="bar top"></div>
  <div class="bar bottom"></div>

  <!-- Particles / dust -->
  <canvas id="fx"></canvas>

  <!-- Stage -->
  <main class="stage">
    <div class="camera">
      <div class="flare" style="top:8vh; left:10vw"></div>
      <div class="flare b" style="bottom:15vh; right:12vw"></div>

      <h1 class="title">HELLO&nbsp;DEAR</h1>
      <p class="subtitle">a tiny, cinematic greeting</p>
    </div>
  </main>

  <!-- Overlays -->
  <div class="vignette"></div>
  <div class="grain"></div>
  <div class="hint" aria-hidden="true">Press any key for pulse
    <svg viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12 4v16m8-8H4"/></svg>
  </div>

  <script>
    // Particle/dust system (vanilla, lightweight)
    const canvas = document.getElementById('fx');
    const ctx = canvas.getContext('2d');
    let w, h, dpr;

    const particles = []; const COUNT = 140; // tweak

    function resize(){
      dpr = Math.min(window.devicePixelRatio || 1, 2);
      w = canvas.width = Math.floor(innerWidth * dpr);
      h = canvas.height = Math.floor(innerHeight * dpr);
      canvas.style.width = innerWidth + 'px';
      canvas.style.height = innerHeight + 'px';
    }

    function rand(a,b){return Math.random()*(b-a)+a}

    function init(){
      particles.length = 0;
      for(let i=0;i<COUNT;i++){
        particles.push({
          x: rand(0,w), y: rand(0,h),
          r: rand(0.5, 2.5) * dpr,
          a: rand(0.15, 0.6),
          vx: rand(-0.08, 0.08) * dpr,
          vy: rand(-0.03, 0.06) * dpr,
          tw: rand(2, 6),
        });
      }
    }

    function tick(t){
      ctx.clearRect(0,0,w,h);

      // soft radial center glow
      const g = ctx.createRadialGradient(w*0.5,h*0.45,0, w*0.5,h*0.45, Math.max(w,h)*0.8);
      g.addColorStop(0, 'rgba(255,255,255,0.04)');
      g.addColorStop(1, 'rgba(0,0,0,0)');
      ctx.fillStyle = g; ctx.fillRect(0,0,w,h);

      ctx.globalCompositeOperation='screen';
      for(const p of particles){
        p.x += p.vx + Math.sin(t/1000/p.tw)*0.1;
        p.y += p.vy + Math.cos(t/1300/p.tw)*0.1;
        if(p.x<0) p.x+=w; if(p.x>w) p.x-=w; if(p.y<0) p.y+=h; if(p.y>h) p.y-=h;

        // draw glow dot
        const rad = ctx.createRadialGradient(p.x,p.y,0, p.x,p.y,p.r*6);
        rad.addColorStop(0, `rgba(255,255,255,${p.a})`);
        rad.addColorStop(1, 'rgba(0,0,0,0)');
        ctx.fillStyle = rad; ctx.beginPath(); ctx.arc(p.x,p.y,p.r*6,0,Math.PI*2); ctx.fill();
      }
      ctx.globalCompositeOperation='source-over';
      requestAnimationFrame(tick);
    }

    window.addEventListener('resize', ()=>{resize(); init();});
    resize(); init(); requestAnimationFrame(tick);

    // Fun interaction: pulse effect
    const body = document.body;
    function pulse(){
      body.animate([
        { filter:'brightness(1) saturate(1)' },
        { filter:'brightness(1.4) saturate(1.4)' },
        { filter:'brightness(1) saturate(1)' }
      ], { duration: 600, easing:'cubic-bezier(.2,.6,.2,1)' });
    }
    window.addEventListener('pointerdown', pulse);
    window.addEventListener('keydown', pulse);
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Cinematic Hello Jithendar</title>
  <style>
    :root{
      --accent: 255, 200, 80;   /* golden */
      --accent2: 120, 180, 255; /* blue */
      --bg1: 14,18,28;          /* deep navy */
      --bg2: 6,8,12;            /* almost black */
      --grain-opacity: .06;
    }

    /* Reset */
    *{box-sizing:border-box;margin:0;padding:0}
    html,body{height:100%;}
    body{
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, "Helvetica Neue", Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
      background: radial-gradient(1200px 800px at 70% 30%, rgba(var(--accent2),.15), rgba(0,0,0,0)) ,
                  radial-gradient(900px 700px at 20% 70%, rgba(var(--accent),.12), rgba(0,0,0,0)) ,
                  linear-gradient(160deg, rgb(var(--bg1)) 0%, rgb(var(--bg2)) 60%);
      overflow:hidden;
      color:white;
      letter-spacing: .04em;
    }

    /* Cinematic letterbox bars */
    .bar{position:fixed;left:0;right:0;height:8vh;background:linear-gradient(to bottom, rgba(0,0,0,.8), rgba(0,0,0,.4));z-index:20;transform:translateY(-100%);animation:barsIn 1.1s ease-out forwards .4s;filter:saturate(.7) contrast(1.2)}
    .bar.bottom{top:auto;bottom:0;transform:translateY(100%);background:linear-gradient(to top, rgba(0,0,0,.85), rgba(0,0,0,.4));}
    @keyframes barsIn{to{transform:translateY(0)}}

    /* Subtle vignette */
    .vignette{position:fixed;inset:0;pointer-events:none;box-shadow:inset 0 0 250px 80px rgba(0,0,0,.7);z-index:5}

    /* Floating particles canvas */
    #fx{position:fixed;inset:0;z-index:2;filter: blur(0.2px) saturate(1.2)}

    /* Center stage */
    .stage{position:relative;inset:0;height:100vh;display:grid;place-items:center;perspective:1200px;}

    /* Camera slow push-in */
    .camera{position:relative;transform:translateZ(0) scale(1);animation:pushIn 11s ease-in forwards .9s;}
    @keyframes pushIn{to{transform:translateZ(0) scale(1.08)}}

    /* Title */
    .title{
      font-size: clamp(40px, 10vw, 160px);
      font-weight: 800;
      line-height: .85;
      text-align:center;
      letter-spacing:.08em;
      text-transform:uppercase;
      background: linear-gradient( 180deg, rgba(255,255,255, .95), rgba(255,255,255,.75) 60%, rgba(255,255,255,.6) ),
                  radial-gradient(60% 160% at 50% 20%, rgba(var(--accent), .9), rgba(var(--accent2), .7));
      -webkit-background-clip: text; background-clip:text; color: transparent;
      filter: drop-shadow(0 6px 24px rgba(255,255,255,.2));
      position:relative;opacity:0; transform:translateY(18px) scale(.98);
      animation:titleIn .9s cubic-bezier(.2,.65,.2,1) forwards 1.1s;
    }
    @keyframes titleIn{ to{ opacity:1; transform:translateY(0) scale(1);} }

    /* Glow sweep */
    .title::after{
      content:""; position:absolute; inset:0; background: linear-gradient(110deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.6) 50%, rgba(255,255,255,0) 100%);
      mix-blend-mode:screen; transform: translateX(-120%) skewX(-20deg); filter: blur(8px);
      animation:shine 2.4s ease-out 1.6s forwards;
    }
    @keyframes shine{ to{ transform: translateX(120%) skewX(-20deg);} }

    /* Subtitle */
    .subtitle{
      margin-top: clamp(8px, 2.5vh, 20px);
      text-align:center; font-size: clamp(14px, 2.2vw, 22px); opacity:0; transform: translateY(8px);
      color: rgba(255,255,255,.85);
      text-shadow: 0 0 20px rgba(var(--accent2), .15);
      animation: subIn .8s ease-out forwards 1.4s;
    }
    @keyframes subIn{ to{ opacity:1; transform:translateY(0);} }

    /* Floating lens flare dots */
    .flare{ position: absolute; width: 14vmax; height:14vmax; border-radius:50%;
      background: radial-gradient(circle, rgba(var(--accent),.35) 0, rgba(var(--accent),0) 70%);
      filter: blur(18px) saturate(1.4);
      mix-blend-mode:screen; opacity:.0; animation: flare 10s ease-in-out infinite alternate 1.2s; z-index:1}
    .flare.b{ background: radial-gradient(circle, rgba(var(--accent2),.35) 0, rgba(var(--accent2),0) 70%); animation-delay: 1.8s}
    @keyframes flare{ 0%{ transform: translate(-20vw, -10vh) scale(.8); opacity:.15} 100%{ transform: translate(30vw, 15vh) scale(1.15); opacity:.35} }

    /* Grain overlay */
    .grain{ position:fixed; inset:0; pointer-events:none; z-index:9; opacity: var(--grain-opacity);
      background-image: url('data:image/svg+xml;utf8,\
        <svg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160">\
          <filter id="n">\
            <feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="2" stitchTiles="stitch"/>\
            <feColorMatrix type="saturate" values="0"/>\
          </filter>\
          <rect width="100%" height="100%" filter="url(%23n)"/>\
        </svg>');
      background-size: 240px 240px; mix-blend-mode: soft-light; animation: grainMove 3s steps(6) infinite;}
    @keyframes grainMove{ to{ transform: translate3d(0,0,0)} }

    /* CTA hint */
    .hint{ position:fixed; bottom: 12px; left:50%; transform:translateX(-50%); font-size:12px; color:rgba(255,255,255,.6); letter-spacing:.15em; text-transform:uppercase; z-index:25; opacity:0; animation: hintIn .8s ease-out forwards 2.2s}
    @keyframes hintIn{ to{opacity:1}}
    .hint svg{width:18px; vertical-align:middle}

    /* Responsive safety */
    @media (max-width: 420px){ .subtitle{ max-width: 90vw; } }
  </style>
</head>
<body>
  <!-- Cinematic bars -->
  <div class="bar top"></div>
  <div class="bar bottom"></div>

  <!-- Particles / dust -->
  <canvas id="fx"></canvas>

  <!-- Stage -->
  <main class="stage">
    <div class="camera">
      <div class="flare" style="top:8vh; left:10vw"></div>
      <div class="flare b" style="bottom:15vh; right:12vw"></div>

      <h1 class="title">HELLO&nbsp;DEAR</h1>
      <p class="subtitle">a tiny, cinematic greeting</p>
    </div>
  </main>

  <!-- Overlays -->
  <div class="vignette"></div>
  <div class="grain"></div>
  <div class="hint" aria-hidden="true">Press any key for pulse
    <svg viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12 4v16m8-8H4"/></svg>
  </div>

  <script>
    // Particle/dust system (vanilla, lightweight)
    const canvas = document.getElementById('fx');
    const ctx = canvas.getContext('2d');
    let w, h, dpr;

    const particles = []; const COUNT = 140; // tweak

    function resize(){
      dpr = Math.min(window.devicePixelRatio || 1, 2);
      w = canvas.width = Math.floor(innerWidth * dpr);
      h = canvas.height = Math.floor(innerHeight * dpr);
      canvas.style.width = innerWidth + 'px';
      canvas.style.height = innerHeight + 'px';
    }

    function rand(a,b){return Math.random()*(b-a)+a}

    function init(){
      particles.length = 0;
      for(let i=0;i<COUNT;i++){
        particles.push({
          x: rand(0,w), y: rand(0,h),
          r: rand(0.5, 2.5) * dpr,
          a: rand(0.15, 0.6),
          vx: rand(-0.08, 0.08) * dpr,
          vy: rand(-0.03, 0.06) * dpr,
          tw: rand(2, 6),
        });
      }
    }

    function tick(t){
      ctx.clearRect(0,0,w,h);

      // soft radial center glow
      const g = ctx.createRadialGradient(w*0.5,h*0.45,0, w*0.5,h*0.45, Math.max(w,h)*0.8);
      g.addColorStop(0, 'rgba(255,255,255,0.04)');
      g.addColorStop(1, 'rgba(0,0,0,0)');
      ctx.fillStyle = g; ctx.fillRect(0,0,w,h);

      ctx.globalCompositeOperation='screen';
      for(const p of particles){
        p.x += p.vx + Math.sin(t/1000/p.tw)*0.1;
        p.y += p.vy + Math.cos(t/1300/p.tw)*0.1;
        if(p.x<0) p.x+=w; if(p.x>w) p.x-=w; if(p.y<0) p.y+=h; if(p.y>h) p.y-=h;

        // draw glow dot
        const rad = ctx.createRadialGradient(p.x,p.y,0, p.x,p.y,p.r*6);
        rad.addColorStop(0, `rgba(255,255,255,${p.a})`);
        rad.addColorStop(1, 'rgba(0,0,0,0)');
        ctx.fillStyle = rad; ctx.beginPath(); ctx.arc(p.x,p.y,p.r*6,0,Math.PI*2); ctx.fill();
      }
      ctx.globalCompositeOperation='source-over';
      requestAnimationFrame(tick);
    }

    window.addEventListener('resize', ()=>{resize(); init();});
    resize(); init(); requestAnimationFrame(tick);

    // Fun interaction: pulse effect
    const body = document.body;
    function pulse(){
      body.animate([
        { filter:'brightness(1) saturate(1)' },
        { filter:'brightness(1.4) saturate(1.4)' },
        { filter:'brightness(1) saturate(1)' }
      ], { duration: 600, easing:'cubic-bezier(.2,.6,.2,1)' });
    }
    window.addEventListener('pointerdown', pulse);
    window.addEventListener('keydown', pulse);
  </script>
</body>
</html>
